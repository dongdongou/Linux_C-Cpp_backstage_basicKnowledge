FCFS（先来先服务， 队列实现， 非抢占的）：先请求CPU的进程先分配到CPU
SJF（最短作业优先调度算法）：平均等待时间最短， 但难以知道下一个CPU区间长度
优先级调度算法（可以是抢占的， 也可以是非抢占的）：优先级越高的越先分配到CPU， 相同优先级先到先服务， 存在的主要问题是：低优先级进程无穷等待CPU， 会导致无穷阻塞式饥饿，解决方案：老化（随着时间的推移， 那些越老的进程优先级反而越高）
时间片轮转调度算法（可抢占的）：队列中没有进程被分配超过一个时间片的CPU时间， 除非它是唯一可运行的进程。 如果进程的CPU区间超过了一个时间片， 那么该进程就被抢占并放回就绪队列
多级队列调度算法：将就绪队列分成多个独立的队列， 每个队列都有自己的调度算法， 队列之间采用固定优先级抢占调度， 其中， 一个进程根据自身属性被永久地分配到一个队列中
多级反馈队列调度算法：与多级队列调度算法相比， 其允许进程在队列之间移动， 若进程使用过多CPU时间， 那么它会被转移到更低的优先级队列， 在较低优先级队列等待时间过长的进程会被转移到更高优先级队列， 以防止饥饿发生


操作系统分类
批 处 理操作系 统 （Batch Processing Operating System ）它的特点是：多道和成批处理。
分 时 操作系 统 (Time Sharing Operating System， 简 称 TSOS)
分时系统具有多路性、交互性、“独占”性和及时性的特征。多路性指，伺时有多个用户使用一台计算机，宏观上看是多个人同时使用一个CPU，微观上是多个人在不同时刻轮流使用CPU。交互性是指，用户根据系统响应结果进一步提出新请求(用户直接干预每一步)。“独占”性是指，用户感觉不到计算机为其他人服务，就像整个系统为他所独占。及时性指，系统对用户提出的请求及时响应。
实时操作系统 (Real Time Operating System， 简 称 RTOS)
实时操作系统要追求的目标是：对外部请求在严格时间范围内做出反应，有高可靠性和完整性。其主要特点是资源的分配和调度首先要考虑实时性然后才是效率。此外，实时操作系统应有较强的容错能力。
网 络 操作系 统 （Network Operating System ， 简 称 NOS ）
通常运行在服务器上的操作系统，是基于计算机网络的，其目标是相互通信及资源共享。
分布式操作系 统 (Distributed Software Systems)
是为分布计算系统配置的操作系统。大量的计算机通过网络被连结在一起，可以获得极高的运算能力及广泛的数据共享。
分布式操作系统是网络操作系统的更高形式，它保持了网络操作系统的全部功能，而且还具有透明性、可靠性和高性能等。网络操作系统和分布式操作系统虽然都用于管理分布在不同地理位置的计算机，但最大的差别是：网络操作系统知道确切的网址，而分布式系统则不知道计算机的确切地址；分布式操作系统负责整个的资源分配，能很好地隐藏系统内部的实现细节，如对象的物理位置等。这些都是对用户透明的。


对于死锁的预防(deadlock prevention)：死锁产生时，产生死锁的四个必要条件必定同时保持，如果至少能使其中一个条件不满足，那么死锁将是不可能产生的了。四个必要条件如下：
1.破坏互斥条件。
2.破坏保持和请求条件 ： 进 程在开始运行前，必须获得所需的全部资源。若系统不能满足，则该进程等待，这就是资源的静态分配。这种分配方式使资源利用率很低。而且，许多程序在开始运行之前，不能精确提出所需资源数量。 
3.破坏非剥夺条件。
4.破话循环等待条件。

管道通信，是指用于连接一个读进程和一个写进程，以实现它们之间通信的一个文件，又称为pipe文件。向管道（共享文件）提供输入的发送进程（即写进程），以字符流形式将大量的数据送入管道；而接收管道输出的接收进程（读进程），则从管道中接收数据。由于发送进程和接收进程是利用管道进行通信的，故又称为管道通信。

为了协调双方的通信，管道进程必须提供以下三方的协调能力：
互斥：当一个进程正在对pipe进行读/写操作时，其它进程必须等待。
同步：当写进程把一定量数据写入pipe时，便去睡眠等待，直到读进程取走数据后，唤醒写进程。读进程读一空pipe时，也应该睡眠等待，直到写进程将数据写入管道，才将之唤醒。
确定对方是否存在，只有确定了对方已经存在时，才能进行通信。
